service: toe-api-data-persistence

package:
  exclude:
    - bin/**
    - config/**
    - logs/**
    - public/**
    - resource/**
    - src/**
    - tests/**
    - node_modules/**
provider:
  name: aws
  region: us-east-1
  runtime: provided
custom:
  TOE_DATABASE:
    HOST: !GetAtt [AppDBCluster, Endpoint.Address]
    PORT: !GetAtt [AppDBCluster, Endpoint.Port]
    USER: ${ssm:/toe/prod/DBApiUsername}
    PASSWORD: ${ssm:/toe/prod/DBApiPass}
plugins:
  - ./vendor/bref/bref
resources:
  Resources:
    AppDBCluster: ${file(./resource/AppDBCluster.yaml)}
    AppDBClusterParams: ${file(./resource/AppDBClusterParams.yaml)}
    AppDBSecurity: ${file(./resource/AppDBSecurity.yaml)}
    AppDBSecurityIngress: ${file(./resource/AppDBSecurityIngress.yaml)}
    AppDBSubnetGroup: ${file(./resource/AppDBSubnetGroup.yaml)}
    AppS3RouteBucket: ${file(./resource/AppS3RouteBucket.yaml)}
  Outputs:
    AppDBArn:
      Value:
        'Fn::Join':
          - ":"
          - - "arn:aws:rds"
            - ${self:provider.region}
            - !Ref "AWS::AccountId"
            - "cluster"
            - !Ref AppDBCluster
      Export:
        Name: !Join [ "-", [ !Ref "AWS::StackName", DBArn ] ]
    AppDBHost:
      Value: { "Fn::GetAtt": [AppDBCluster, Endpoint.Address]}
      Export:
        Name: !Join [ "-", [ !Ref "AWS::StackName", DBAddress ] ]
    AppDBPort:
      Value: { "Fn::GetAtt": [AppDBCluster, Endpoint.Port]}
      Export:
        Name: !Join [ "-", [ !Ref "AWS::StackName", DBPort ] ]
    AppDBUsername:
      Value: ${self:custom.TOE_DATABASE.USER}
      Export:
        Name: !Join [ "-", [ !Ref "AWS::StackName", DBUser ] ]
    AppDBPassword:
      Value: ${self:custom.TOE_DATABASE.PASSWORD}
      Export:
        Name: !Join [ "-", [ !Ref "AWS::StackName", DBPassword ] ]
    AppDBSecurityGroupId:
      Value: !GetAtt AppDBSecurity.GroupId
      Export:
        Name: !Join [ "-", [ !Ref "AWS::StackName", DBSecurityGroupId ] ]
    AppS3RouteBucketName:
      Value: !Ref AppS3RouteBucket
      Export:
        Name: !Join [ "-", [ !Ref "AWS::StackName", S3RouteBucketName ] ]
    AppS3RouteBucketArn:
      Value: { "Fn::GetAtt": [AppS3RouteBucket, Arn]}
      Export:
        Name: !Join [ "-", [ !Ref "AWS::StackName", S3RouteBucketArn ] ]
