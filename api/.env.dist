# APP_ENV is a special variable that will also load in a ".env.$VALUE" file. If this value is unchanged, the backend will also load in a .env.dev file
APP_ENV=dev
TOE_RESET_ACCOUNT_EMAIL=
TOE_RESET_CLIENT_ID=
TOE_RESET_CLIENT_SECRET=
TOE_RESET_REFRESH_TOKEN=
TOE_AWS_REGION=us-east-1
TOE_AWS_ACCESS_KEY=
TOE_AWS_SECRET_KEY=
TOE_AWS_ASSUME_ROLE_ARN=
TOE_EMAIL_CLIENT=ses
TOE_ENCODED_JWT_KEY=dHJpY2tvcmVhdDIwMjBkZW1v
TOE_LOGGING_LEVEL=INFO
TOE_DEBUG_ON=true
TOE_OBJECT_STORAGE_TYPE=s3
TOE_ROUTE_BUCKET=

#################
# Database Info #
#################
## Dev (for local development with docker
# database type can be either 'mysql' or 'aurora' depending on if you're connecting to an AWS Aurora cluster or not
TOE_DATABASE_TYPE=mysql
TOE_DATABASE_HOST=toe_mysql
TOE_DATABASE_PORT=3306
TOE_DATABASE_USER=root
TOE_DATABASE_PASSWORD=example

## Prod (after deploying to AWS and using RDS Aurora Serverless)
#TOE_DATABASE_TYPE=aurora
#TOE_DATABASE_HOST=trick-or-eat.<some_id>.<region_app_was_deployed>.rds.amazonaws.com
#TOE_DATABASE_PORT=3306
#TOE_DATABASE_USER=<username>
#TOE_DATABASE_PASSWORD=<password>

TOE_ACCESS_CONTROL_ALLOW_ORIGIN=http://local.guelphtrickoreat.ca
# endregion
TOE_LOG_FILE=php://stdout
TOE_S3_ROUTE_BUCKET=$(aws cloudformation describe-stacks --stack-name toe-api-data-persistence-dev --query "Stacks[0].Outputs[?OutputKey=='AppS3RouteBucketName'].OutputValue" --output text)
TOE_DB_ARN=$(aws cloudformation describe-stacks --stack-name toe-api-data-persistence-dev --query "Stacks[0].Outputs[?OutputKey=='AppDBArn'].OutputValue" --output text)
TOE_DB_SECRET_ARN=